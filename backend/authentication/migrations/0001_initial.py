# Generated by Django 5.0 on 2025-07-31 17:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('language', models.CharField(default='en', max_length=10)),
                ('avatar_url', models.URLField(blank=True, max_length=500)),
                ('metadata', models.JSONField(default=dict)),
                ('permission_overrides', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_customuser',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ExtendedPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
                ('permission_type', models.CharField(choices=[('action', 'Action Permission'), ('field', 'Field Permission'), ('pipeline', 'Pipeline Permission'), ('system', 'System Permission')], max_length=50)),
                ('resource_type', models.CharField(choices=[('pipeline', 'Pipeline'), ('record', 'Record'), ('field', 'Field'), ('view', 'View'), ('system', 'System')], max_length=100)),
                ('resource_id', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_system', models.BooleanField(default=False)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'db_table': 'auth_extendedpermission',
            },
        ),
        migrations.CreateModel(
            name='UserPipelinePermissionOverride',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipeline_id', models.IntegerField()),
                ('permissions', models.JSONField(default=list)),
                ('access_level', models.CharField(default='read', max_length=20)),
                ('can_view_all_records', models.BooleanField(default=True)),
                ('can_edit_all_records', models.BooleanField(default=False)),
                ('can_delete_records', models.BooleanField(default=False)),
                ('can_export_data', models.BooleanField(default=True)),
                ('can_import_data', models.BooleanField(default=False)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('reason', models.TextField(blank=True)),
                ('granted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_pipeline_overrides', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipeline_permission_overrides', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'auth_userpipelinepermissionoverride',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('device_info', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'auth_usersession',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_system_default', models.BooleanField(default=False)),
                ('is_custom', models.BooleanField(default=True)),
                ('base_permissions', models.JSONField(default=dict)),
                ('dashboard_config', models.JSONField(default=dict)),
                ('menu_permissions', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_user_types', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'auth_usertype',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='authentication.usertype'),
        ),
        migrations.CreateModel(
            name='UserTypeFieldPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipeline_id', models.IntegerField()),
                ('field_id', models.IntegerField()),
                ('can_view', models.BooleanField(default=True)),
                ('can_edit', models.BooleanField(default=False)),
                ('can_require', models.BooleanField(default=False)),
                ('visibility', models.CharField(choices=[('visible', 'Always Visible'), ('hidden', 'Always Hidden'), ('conditional', 'Conditional Visibility'), ('readonly', 'Read Only')], default='visible', max_length=20)),
                ('visibility_conditions', models.JSONField(default=dict)),
                ('default_value', models.JSONField(blank=True, null=True)),
                ('value_constraints', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_field_permissions', to=settings.AUTH_USER_MODEL)),
                ('user_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_permissions', to='authentication.usertype')),
            ],
            options={
                'db_table': 'auth_usertypefieldpermission',
            },
        ),
        migrations.CreateModel(
            name='UserTypePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_granted', models.BooleanField(default=True)),
                ('conditions', models.JSONField(default=dict)),
                ('traversal_depth', models.IntegerField(default=1)),
                ('field_restrictions', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.extendedpermission')),
                ('user_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.usertype')),
            ],
            options={
                'db_table': 'auth_usertypepermission',
            },
        ),
        migrations.CreateModel(
            name='UserTypePipelinePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipeline_id', models.IntegerField()),
                ('permissions', models.JSONField(default=list)),
                ('access_level', models.CharField(choices=[('none', 'No Access'), ('read', 'Read Only'), ('write', 'Read & Write'), ('admin', 'Full Admin')], default='read', max_length=20)),
                ('can_view_all_records', models.BooleanField(default=True)),
                ('can_edit_all_records', models.BooleanField(default=False)),
                ('can_delete_records', models.BooleanField(default=False)),
                ('can_export_data', models.BooleanField(default=True)),
                ('can_import_data', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_pipeline_permissions', to=settings.AUTH_USER_MODEL)),
                ('user_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipeline_permissions', to='authentication.usertype')),
            ],
            options={
                'db_table': 'auth_usertypepipelinepermission',
            },
        ),
        migrations.AddIndex(
            model_name='extendedpermission',
            index=models.Index(fields=['permission_type', 'resource_type'], name='auth_extend_permiss_274e26_idx'),
        ),
        migrations.AddIndex(
            model_name='extendedpermission',
            index=models.Index(fields=['resource_id'], name='auth_extend_resourc_1d8d24_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='extendedpermission',
            unique_together={('content_type', 'codename')},
        ),
        migrations.AddIndex(
            model_name='userpipelinepermissionoverride',
            index=models.Index(fields=['user'], name='auth_userpi_user_id_e7c66f_idx'),
        ),
        migrations.AddIndex(
            model_name='userpipelinepermissionoverride',
            index=models.Index(fields=['pipeline_id'], name='auth_userpi_pipelin_0b79b3_idx'),
        ),
        migrations.AddIndex(
            model_name='userpipelinepermissionoverride',
            index=models.Index(fields=['expires_at'], name='auth_userpi_expires_03fda9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userpipelinepermissionoverride',
            unique_together={('user', 'pipeline_id')},
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['user'], name='auth_userse_user_id_eedb27_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['expires_at'], name='auth_userse_expires_10a7aa_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['last_activity'], name='auth_userse_last_ac_6b4452_idx'),
        ),
        migrations.AddIndex(
            model_name='usertype',
            index=models.Index(fields=['slug'], name='auth_userty_slug_66ed09_idx'),
        ),
        migrations.AddIndex(
            model_name='usertype',
            index=models.Index(fields=['is_system_default'], name='auth_userty_is_syst_a19649_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['user_type'], name='auth_custom_user_ty_217b28_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['is_active'], name='auth_custom_is_acti_528f68_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['last_activity'], name='auth_custom_last_ac_421724_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['email'], name='auth_custom_email_cedfc5_idx'),
        ),
        migrations.AddIndex(
            model_name='usertypefieldpermission',
            index=models.Index(fields=['user_type'], name='auth_userty_user_ty_64b42f_idx'),
        ),
        migrations.AddIndex(
            model_name='usertypefieldpermission',
            index=models.Index(fields=['pipeline_id'], name='auth_userty_pipelin_8cb541_idx'),
        ),
        migrations.AddIndex(
            model_name='usertypefieldpermission',
            index=models.Index(fields=['field_id'], name='auth_userty_field_i_7fb8bc_idx'),
        ),
        migrations.AddIndex(
            model_name='usertypefieldpermission',
            index=models.Index(fields=['visibility'], name='auth_userty_visibil_97323d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usertypefieldpermission',
            unique_together={('user_type', 'pipeline_id', 'field_id')},
        ),
        migrations.AddIndex(
            model_name='usertypepermission',
            index=models.Index(fields=['user_type'], name='auth_userty_user_ty_f449c5_idx'),
        ),
        migrations.AddIndex(
            model_name='usertypepermission',
            index=models.Index(fields=['permission'], name='auth_userty_permiss_4b8fec_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usertypepermission',
            unique_together={('user_type', 'permission')},
        ),
        migrations.AddIndex(
            model_name='usertypepipelinepermission',
            index=models.Index(fields=['user_type'], name='auth_userty_user_ty_d28e64_idx'),
        ),
        migrations.AddIndex(
            model_name='usertypepipelinepermission',
            index=models.Index(fields=['pipeline_id'], name='auth_userty_pipelin_0bd125_idx'),
        ),
        migrations.AddIndex(
            model_name='usertypepipelinepermission',
            index=models.Index(fields=['access_level'], name='auth_userty_access__ac1bc6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usertypepipelinepermission',
            unique_together={('user_type', 'pipeline_id')},
        ),
    ]
