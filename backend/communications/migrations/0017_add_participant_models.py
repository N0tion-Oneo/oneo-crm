# Generated by Django 5.0 on 2025-08-27 21:01

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('communications', '0016_add_conversation_attendees'),
        ('pipelines', '0016_update_pipeline_types'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConversationParticipant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('sender', 'Original Sender'), ('recipient', 'Direct Recipient'), ('cc', 'CC Recipient'), ('bcc', 'BCC Recipient'), ('member', 'Group Member'), ('admin', 'Group Admin'), ('owner', 'Group Owner/Creator')], default='member', help_text="Participant's role in this conversation", max_length=20)),
                ('provider_participant_id', models.CharField(blank=True, help_text='Provider-specific participant ID if different from main participant ID', max_length=255)),
                ('joined_at', models.DateTimeField(auto_now_add=True, help_text='When participant joined conversation')),
                ('left_at', models.DateTimeField(blank=True, help_text='When participant left (null if active)', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether participant is currently in conversation')),
                ('message_count', models.IntegerField(default=0, help_text='Number of messages sent in this conversation')),
                ('last_message_at', models.DateTimeField(blank=True, help_text='Last message timestamp', null=True)),
                ('last_read_at', models.DateTimeField(blank=True, help_text='Last time participant read messages', null=True)),
                ('unread_count', models.IntegerField(default=0, help_text='Unread messages for this participant')),
                ('metadata', models.JSONField(default=dict, help_text='Additional participant-conversation data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254)),
                ('phone', models.CharField(blank=True, db_index=True, max_length=50)),
                ('linkedin_member_urn', models.CharField(blank=True, db_index=True, max_length=100)),
                ('instagram_username', models.CharField(blank=True, db_index=True, max_length=50)),
                ('facebook_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('telegram_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('twitter_handle', models.CharField(blank=True, db_index=True, max_length=50)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('avatar_url', models.URLField(blank=True)),
                ('resolution_confidence', models.FloatField(default=0, help_text='Confidence score of contact resolution')),
                ('resolution_method', models.CharField(blank=True, help_text='How the contact was resolved', max_length=50)),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When contact was resolved', null=True)),
                ('first_seen', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('total_conversations', models.IntegerField(default=0)),
                ('total_messages', models.IntegerField(default=0)),
                ('metadata', models.JSONField(default=dict, help_text='Additional provider-specific data')),
            ],
        ),
        migrations.RemoveIndex(
            model_name='conversation',
            name='communicati_primary_a9f407_idx',
        ),
        migrations.RemoveField(
            model_name='conversation',
            name='primary_contact_record',
        ),
        migrations.AlterField(
            model_name='conversation',
            name='attendees',
            field=models.ManyToManyField(help_text='DEPRECATED: Use conversation_participants instead', related_name='conversations', through='communications.ConversationAttendee', to='communications.chatattendee'),
        ),
        migrations.AlterField(
            model_name='message',
            name='contact_record',
            field=models.ForeignKey(blank=True, help_text='DEPRECATED: Use sender_participant.contact_record instead', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipelines.record'),
        ),
        migrations.AlterField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(blank=True, help_text='DEPRECATED: Use sender_participant instead', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_messages', to='communications.chatattendee'),
        ),
        migrations.AddField(
            model_name='conversationparticipant',
            name='conversation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_participants', to='communications.conversation'),
        ),
        migrations.AddField(
            model_name='participant',
            name='contact_record',
            field=models.ForeignKey(blank=True, help_text='Linked CRM contact record if resolved', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='communication_participants', to='pipelines.record'),
        ),
        migrations.AddField(
            model_name='conversationparticipant',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_memberships', to='communications.participant'),
        ),
        migrations.AddField(
            model_name='message',
            name='sender_participant',
            field=models.ForeignKey(blank=True, help_text='The participant who sent this message', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_messages_new', to='communications.participant'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender_participant', '-created_at'], name='communicati_sender__fb0eb8_idx'),
        ),
        migrations.AddIndex(
            model_name='participant',
            index=models.Index(fields=['contact_record', '-last_seen'], name='communicati_contact_c4da91_idx'),
        ),
        migrations.AddIndex(
            model_name='participant',
            index=models.Index(fields=['email', 'contact_record'], name='communicati_email_4a19d1_idx'),
        ),
        migrations.AddIndex(
            model_name='participant',
            index=models.Index(fields=['phone', 'contact_record'], name='communicati_phone_66f06b_idx'),
        ),
        migrations.AddIndex(
            model_name='participant',
            index=models.Index(fields=['resolution_confidence'], name='communicati_resolut_37d775_idx'),
        ),
        migrations.AddIndex(
            model_name='participant',
            index=models.Index(fields=['-last_seen'], name='communicati_last_se_d235bf_idx'),
        ),
        migrations.AddConstraint(
            model_name='participant',
            constraint=models.UniqueConstraint(condition=models.Q(('email__gt', '')), fields=('email',), name='unique_participant_email'),
        ),
        migrations.AddConstraint(
            model_name='participant',
            constraint=models.UniqueConstraint(condition=models.Q(('phone__gt', '')), fields=('phone',), name='unique_participant_phone'),
        ),
        migrations.AddConstraint(
            model_name='participant',
            constraint=models.UniqueConstraint(condition=models.Q(('linkedin_member_urn__gt', '')), fields=('linkedin_member_urn',), name='unique_participant_linkedin'),
        ),
        migrations.AddConstraint(
            model_name='participant',
            constraint=models.UniqueConstraint(condition=models.Q(('instagram_username__gt', '')), fields=('instagram_username',), name='unique_participant_instagram'),
        ),
        migrations.AddConstraint(
            model_name='participant',
            constraint=models.UniqueConstraint(condition=models.Q(('facebook_id__gt', '')), fields=('facebook_id',), name='unique_participant_facebook'),
        ),
        migrations.AddConstraint(
            model_name='participant',
            constraint=models.UniqueConstraint(condition=models.Q(('telegram_id__gt', '')), fields=('telegram_id',), name='unique_participant_telegram'),
        ),
        migrations.AddConstraint(
            model_name='participant',
            constraint=models.UniqueConstraint(condition=models.Q(('twitter_handle__gt', '')), fields=('twitter_handle',), name='unique_participant_twitter'),
        ),
        migrations.AddIndex(
            model_name='conversationparticipant',
            index=models.Index(fields=['conversation', 'is_active'], name='communicati_convers_eae121_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationparticipant',
            index=models.Index(fields=['participant', '-last_message_at'], name='communicati_partici_a66cc7_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationparticipant',
            index=models.Index(fields=['participant', 'is_active'], name='communicati_partici_243530_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationparticipant',
            index=models.Index(fields=['role', 'is_active'], name='communicati_role_e8ffac_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conversationparticipant',
            unique_together={('conversation', 'participant')},
        ),
    ]
