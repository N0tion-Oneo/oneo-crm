# Generated by Django 5.0 on 2025-08-13 09:32

from django.db import migrations


def populate_template_types(apps, schema_editor):
    """Populate template_type field for existing URL extraction rules"""
    URLExtractionRule = apps.get_model('duplicates', 'URLExtractionRule')
    
    for rule in URLExtractionRule.objects.filter(template_type__isnull=True):
        domains = [d.lower() for d in rule.domain_patterns]
        pattern = rule.extraction_pattern.lower()
        format_str = rule.extraction_format.lower()
        
        # Detect template type based on characteristics
        if '*' in domains and format_str == '{0}':
            rule.template_type = 'domain'
        elif any('linkedin' in d for d in domains):
            if 'company' in pattern or 'school' in pattern or 'organization' in pattern:
                rule.template_type = 'linkedin-company'
            else:
                rule.template_type = 'linkedin'
        elif any('github' in d for d in domains):
            rule.template_type = 'github'
        elif any('twitter' in d or 'x.com' in d for d in domains):
            rule.template_type = 'twitter'
        else:
            rule.template_type = 'custom'
        
        rule.save(update_fields=['template_type'])


def reverse_populate_template_types(apps, schema_editor):
    """Reverse migration - clear template_type fields"""
    URLExtractionRule = apps.get_model('duplicates', 'URLExtractionRule')
    URLExtractionRule.objects.update(template_type=None)


class Migration(migrations.Migration):

    dependencies = [
        ('duplicates', '0003_add_template_type'),
    ]

    operations = [
        migrations.RunPython(populate_template_types, reverse_populate_template_types),
    ]
