# Generated by Django 5.0 on 2025-08-13 09:44

from django.db import migrations


def populate_url_extraction_rule_pipelines(apps, schema_editor):
    """Populate pipeline field for existing URL extraction rules"""
    URLExtractionRule = apps.get_model('duplicates', 'URLExtractionRule')
    Pipeline = apps.get_model('pipelines', 'Pipeline')
    
    # Find rules without pipelines
    rules_without_pipeline = URLExtractionRule.objects.filter(pipeline__isnull=True)
    
    # Since we're using tenant schemas, we're already in the correct tenant context
    # Get the first available pipeline in this schema
    first_pipeline = Pipeline.objects.first()
    
    if first_pipeline:
        for rule in rules_without_pipeline:
            # Check if a rule with this name already exists for this pipeline
            existing = URLExtractionRule.objects.filter(
                pipeline=first_pipeline, 
                name=rule.name
            ).exclude(id=rule.id).first()
            
            if existing:
                # Rename this rule to avoid conflict
                counter = 1
                new_name = f"{rule.name} ({counter})"
                while URLExtractionRule.objects.filter(
                    pipeline=first_pipeline, 
                    name=new_name
                ).exists():
                    counter += 1
                    new_name = f"{rule.name} ({counter})"
                rule.name = new_name
                print(f"Renamed rule to avoid conflict: '{rule.name}' -> '{new_name}'")
            
            rule.pipeline = first_pipeline
            rule.save(update_fields=['pipeline', 'name'])
            print(f"Assigned pipeline '{first_pipeline.name}' to URL extraction rule '{rule.name}'")
    else:
        print("WARNING: No pipelines found in current schema, unable to assign pipelines to URL extraction rules")


def reverse_populate_url_extraction_rule_pipelines(apps, schema_editor):
    """Reverse migration - clear pipeline fields"""
    URLExtractionRule = apps.get_model('duplicates', 'URLExtractionRule')
    URLExtractionRule.objects.update(pipeline=None)


class Migration(migrations.Migration):

    dependencies = [
        ('duplicates', '0005_add_pipeline_to_url_extraction_rule'),
        ('pipelines', '0008_remove_record_data_field_type'),  # Ensure pipelines exist
    ]

    operations = [
        migrations.RunPython(populate_url_extraction_rule_pipelines, reverse_populate_url_extraction_rule_pipelines),
    ]
