# Generated by Django 5.0 on 2025-07-31 17:24

import django.contrib.postgres.fields
import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PipelineTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('crm', 'Customer Relationship Management'), ('ats', 'Applicant Tracking System'), ('cms', 'Content Management System'), ('project', 'Project Management'), ('inventory', 'Inventory Management'), ('support', 'Support Ticketing'), ('custom', 'Custom Template')], max_length=100)),
                ('template_data', models.JSONField()),
                ('is_system', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('usage_count', models.IntegerField(default=0)),
                ('preview_config', models.JSONField(default=dict)),
                ('sample_data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'pipelines_pipelinetemplate',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Pipeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(default='database', max_length=50)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('field_schema', models.JSONField(default=dict)),
                ('view_config', models.JSONField(default=dict)),
                ('settings', models.JSONField(default=dict)),
                ('pipeline_type', models.CharField(choices=[('crm', 'CRM Pipeline'), ('ats', 'ATS Pipeline'), ('cms', 'CMS Pipeline'), ('custom', 'Custom Pipeline')], default='custom', max_length=50)),
                ('access_level', models.CharField(choices=[('private', 'Private'), ('internal', 'Internal'), ('public', 'Public')], default='private', max_length=20)),
                ('permission_config', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('is_system', models.BooleanField(default=False)),
                ('record_count', models.IntegerField(default=0)),
                ('last_record_created', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipelines.pipelinetemplate')),
            ],
            options={
                'db_table': 'pipelines_pipeline',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(default=dict)),
                ('title', models.CharField(blank=True, max_length=500)),
                ('status', models.CharField(default='active', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField(default=1)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('ai_summary', models.TextField(blank=True)),
                ('ai_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ai_last_updated', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_records', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_records', to=settings.AUTH_USER_MODEL)),
                ('pipeline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='pipelines.pipeline')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='updated_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'pipelines_record',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('field_type', models.CharField(choices=[('text', 'text'), ('textarea', 'textarea'), ('number', 'number'), ('boolean', 'boolean'), ('date', 'date'), ('phone', 'phone'), ('email', 'email'), ('address', 'address'), ('select', 'select'), ('multiselect', 'multiselect'), ('tags', 'tags'), ('url', 'url'), ('file', 'file'), ('button', 'button'), ('relation', 'relation'), ('record_data', 'record_data'), ('ai_generated', 'ai_generated')], max_length=50)),
                ('field_config', models.JSONField(default=dict)),
                ('storage_constraints', models.JSONField(default=dict)),
                ('business_rules', models.JSONField(default=dict)),
                ('display_name', models.CharField(blank=True, max_length=255)),
                ('help_text', models.TextField(blank=True)),
                ('placeholder', models.CharField(blank=True, max_length=255)),
                ('enforce_uniqueness', models.BooleanField(default=False)),
                ('create_index', models.BooleanField(default=False)),
                ('is_searchable', models.BooleanField(default=True)),
                ('is_ai_field', models.BooleanField(default=False)),
                ('display_order', models.IntegerField(default=0)),
                ('width', models.CharField(default='full', max_length=20)),
                ('is_visible_in_list', models.BooleanField(default=True)),
                ('is_visible_in_detail', models.BooleanField(default=True)),
                ('ai_config', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('pipeline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='pipelines.pipeline')),
            ],
            options={
                'db_table': 'pipelines_field',
                'ordering': ['display_order', 'name'],
                'indexes': [models.Index(fields=['pipeline'], name='pipelines_f_pipelin_9354a0_idx'), models.Index(fields=['field_type'], name='pipelines_f_field_t_bfe7fd_idx'), models.Index(fields=['display_order'], name='pipelines_f_display_e3aa58_idx'), models.Index(fields=['is_ai_field'], name='pipelines_f_is_ai_f_29bf35_idx'), django.contrib.postgres.indexes.GinIndex(fields=['field_config'], name='pipelines_f_field_c_f24d0a_gin'), django.contrib.postgres.indexes.GinIndex(fields=['storage_constraints'], name='pipelines_f_storage_2d6f31_gin'), django.contrib.postgres.indexes.GinIndex(fields=['business_rules'], name='pipelines_f_busines_1690f1_gin'), django.contrib.postgres.indexes.GinIndex(fields=['ai_config'], name='pipelines_f_ai_conf_d27a94_gin')],
                'unique_together': {('pipeline', 'slug')},
            },
        ),
        migrations.AddIndex(
            model_name='pipelinetemplate',
            index=models.Index(fields=['category'], name='pipelines_p_categor_082867_idx'),
        ),
        migrations.AddIndex(
            model_name='pipelinetemplate',
            index=models.Index(fields=['is_system'], name='pipelines_p_is_syst_416369_idx'),
        ),
        migrations.AddIndex(
            model_name='pipelinetemplate',
            index=models.Index(fields=['is_public'], name='pipelines_p_is_publ_73f0de_idx'),
        ),
        migrations.AddIndex(
            model_name='pipelinetemplate',
            index=django.contrib.postgres.indexes.GinIndex(fields=['template_data'], name='pipelines_p_templat_2bafaf_gin'),
        ),
        migrations.AddIndex(
            model_name='pipeline',
            index=models.Index(fields=['slug'], name='pipelines_p_slug_6892f8_idx'),
        ),
        migrations.AddIndex(
            model_name='pipeline',
            index=models.Index(fields=['pipeline_type'], name='pipelines_p_pipelin_9536c2_idx'),
        ),
        migrations.AddIndex(
            model_name='pipeline',
            index=models.Index(fields=['is_active'], name='pipelines_p_is_acti_c025a9_idx'),
        ),
        migrations.AddIndex(
            model_name='pipeline',
            index=models.Index(fields=['created_by'], name='pipelines_p_created_ea82ac_idx'),
        ),
        migrations.AddIndex(
            model_name='pipeline',
            index=django.contrib.postgres.indexes.GinIndex(fields=['field_schema'], name='pipelines_p_field_s_8a9a89_gin'),
        ),
        migrations.AddIndex(
            model_name='record',
            index=models.Index(fields=['pipeline'], name='pipelines_r_pipelin_58b466_idx'),
        ),
        migrations.AddIndex(
            model_name='record',
            index=models.Index(fields=['status'], name='pipelines_r_status_d10d1a_idx'),
        ),
        migrations.AddIndex(
            model_name='record',
            index=models.Index(fields=['created_at'], name='pipelines_r_created_24e51b_idx'),
        ),
        migrations.AddIndex(
            model_name='record',
            index=models.Index(fields=['updated_at'], name='pipelines_r_updated_8d098c_idx'),
        ),
        migrations.AddIndex(
            model_name='record',
            index=models.Index(fields=['is_deleted'], name='pipelines_r_is_dele_17cc5e_idx'),
        ),
        migrations.AddIndex(
            model_name='record',
            index=models.Index(condition=models.Q(('is_deleted', False)), fields=['pipeline', 'status'], name='idx_rec_pipe_status_active'),
        ),
        migrations.AddIndex(
            model_name='record',
            index=models.Index(condition=models.Q(('is_deleted', False)), fields=['pipeline', 'updated_at'], name='idx_rec_pipe_updated_active'),
        ),
        migrations.AddIndex(
            model_name='record',
            index=django.contrib.postgres.indexes.GinIndex(fields=['data'], name='pipelines_r_data_a8ff6e_gin'),
        ),
        migrations.AddIndex(
            model_name='record',
            index=django.contrib.postgres.indexes.GinIndex(fields=['tags'], name='pipelines_r_tags_fb01ba_gin'),
        ),
    ]
