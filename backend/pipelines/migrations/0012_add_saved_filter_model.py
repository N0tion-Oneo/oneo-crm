# Generated by Django 5.0 on 2025-08-14 00:41

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pipelines', '0011_add_shared_view_visibility'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SavedFilter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Display name for the saved filter', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional description of what this filter shows')),
                ('filter_config', models.JSONField(default=dict, help_text='Stores BooleanQuery structure from frontend filter system')),
                ('view_mode', models.CharField(choices=[('table', 'Table'), ('kanban', 'Kanban'), ('calendar', 'Calendar')], default='table', help_text='Display mode for the filtered view', max_length=20)),
                ('visible_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), default=list, help_text='List of field slugs that should be visible in this view', size=None)),
                ('sort_config', models.JSONField(default=dict, help_text='Sort configuration with field name and direction')),
                ('is_shareable', models.BooleanField(default=False, help_text='Whether this filter can be shared with external users')),
                ('share_access_level', models.CharField(choices=[('readonly', 'Read-only'), ('filtered_edit', 'Filtered Edit')], default='readonly', help_text='Access level for shared views', max_length=20)),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default view for the pipeline')),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='Number of times this filter has been used')),
                ('last_used_at', models.DateTimeField(blank=True, help_text='When this filter was last applied', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_saved_filters', to=settings.AUTH_USER_MODEL)),
                ('pipeline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_filters', to='pipelines.pipeline')),
            ],
            options={
                'db_table': 'pipelines_savedfilter',
                'ordering': ['-last_used_at', '-created_at'],
                'indexes': [models.Index(fields=['pipeline', 'created_by'], name='pipelines_s_pipelin_37f604_idx'), models.Index(fields=['pipeline', 'is_default'], name='pipelines_s_pipelin_5fea99_idx'), models.Index(fields=['is_shareable'], name='pipelines_s_is_shar_5d90e7_idx'), models.Index(fields=['created_at'], name='pipelines_s_created_79912a_idx'), models.Index(fields=['usage_count'], name='pipelines_s_usage_c_98605c_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='savedfilter',
            constraint=models.UniqueConstraint(fields=('pipeline', 'name', 'created_by'), name='unique_filter_name_per_user_pipeline'),
        ),
        migrations.AddConstraint(
            model_name='savedfilter',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('pipeline', 'created_by'), name='unique_default_filter_per_user_pipeline'),
        ),
    ]
