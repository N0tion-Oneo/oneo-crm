# Generated by Django 5.0 on 2025-07-29 14:39

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pipelines', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Channel display name', max_length=255)),
                ('channel_type', models.CharField(choices=[('email', 'Email'), ('whatsapp', 'WhatsApp'), ('linkedin', 'LinkedIn'), ('sms', 'SMS'), ('slack', 'Slack')], help_text='Type of communication channel', max_length=50)),
                ('unipile_account_id', models.CharField(blank=True, help_text='UniPile account identifier', max_length=100, null=True, unique=True)),
                ('provider_name', models.CharField(blank=True, help_text='Provider name (gmail, outlook, whatsapp_business, etc.)', max_length=100, null=True)),
                ('provider_config', models.JSONField(default=dict, help_text='Provider-specific configuration')),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('rate_limit_per_hour', models.PositiveIntegerField(default=100, help_text='Maximum messages per hour')),
                ('auth_status', models.CharField(choices=[('connected', 'Connected'), ('disconnected', 'Disconnected'), ('error', 'Error')], default='disconnected', max_length=20)),
                ('auth_expires_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_channels', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'communications_channel',
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_thread_id', models.CharField(blank=True, help_text='Platform-specific thread ID', max_length=255, null=True)),
                ('participants', models.JSONField(default=list, help_text='Array of participant info')),
                ('subject', models.CharField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('active', 'Active'), ('archived', 'Archived'), ('closed', 'Closed')], default='active', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20)),
                ('sentiment', models.CharField(blank=True, help_text='Detected sentiment: positive, negative, neutral', max_length=20, null=True)),
                ('sentiment_score', models.DecimalField(blank=True, decimal_places=2, help_text='Sentiment confidence score', max_digits=3, null=True)),
                ('intent', models.CharField(blank=True, help_text='Detected conversation intent', max_length=100, null=True)),
                ('language', models.CharField(default='en', max_length=10)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('last_inbound_at', models.DateTimeField(blank=True, null=True)),
                ('last_outbound_at', models.DateTimeField(blank=True, null=True)),
                ('message_count', models.PositiveIntegerField(default=0)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_conversations', to=settings.AUTH_USER_MODEL)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='communications.channel')),
                ('pipeline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversations', to='pipelines.pipeline')),
                ('primary_contact', models.ForeignKey(blank=True, help_text='Link to contact record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversations', to='pipelines.record')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='linked_conversations', to='pipelines.record')),
            ],
            options={
                'db_table': 'communications_conversation',
            },
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Sequence name', max_length=255)),
                ('description', models.TextField(blank=True)),
                ('sequence_type', models.CharField(choices=[('nurture', 'Nurture'), ('outreach', 'Outreach'), ('follow_up', 'Follow Up'), ('onboarding', 'Onboarding')], default='nurture', max_length=50)),
                ('objective', models.CharField(blank=True, help_text='Human-readable objective', max_length=255)),
                ('ai_enabled', models.BooleanField(default=True)),
                ('ai_optimization_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('steps', models.JSONField(help_text='Array of sequence step configurations')),
                ('trigger_conditions', models.JSONField(default=dict)),
                ('target_audience', models.JSONField(default=dict)),
                ('default_timezone', models.CharField(default='UTC', max_length=50)),
                ('business_hours_only', models.BooleanField(default=True)),
                ('respect_do_not_disturb', models.BooleanField(default=True)),
                ('success_metrics', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('is_template', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_sequences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'communications_sequence',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_message_id', models.CharField(blank=True, help_text='Platform-specific message ID', max_length=255, null=True, unique=True)),
                ('thread_id', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(help_text='Message content')),
                ('content_type', models.CharField(default='text', help_text='Content type: text, html, markdown', max_length=50)),
                ('direction', models.CharField(choices=[('inbound', 'Inbound'), ('outbound', 'Outbound')], help_text='Message direction', max_length=10)),
                ('message_type', models.CharField(default='message', help_text='Message type: message, reply, forward', max_length=50)),
                ('sender_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('sender_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sender_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('recipient_info', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('failed_reason', models.TextField(blank=True, null=True)),
                ('sentiment', models.CharField(blank=True, max_length=20, null=True)),
                ('intent', models.CharField(blank=True, max_length=100, null=True)),
                ('entities', models.JSONField(default=dict, help_text='Extracted entities (names, dates, etc.)')),
                ('attachments', models.JSONField(default=list)),
                ('sequence_step', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='communications.conversation')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_messages', to=settings.AUTH_USER_MODEL)),
                ('sequence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='communications.sequence')),
            ],
            options={
                'db_table': 'communications_message',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunicationAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='Analytics date')),
                ('messages_sent', models.PositiveIntegerField(default=0)),
                ('messages_delivered', models.PositiveIntegerField(default=0)),
                ('messages_opened', models.PositiveIntegerField(default=0)),
                ('messages_clicked', models.PositiveIntegerField(default=0)),
                ('messages_replied', models.PositiveIntegerField(default=0)),
                ('messages_failed', models.PositiveIntegerField(default=0)),
                ('delivery_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('open_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('click_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('reply_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('enrollments_started', models.PositiveIntegerField(default=0)),
                ('enrollments_completed', models.PositiveIntegerField(default=0)),
                ('enrollments_failed', models.PositiveIntegerField(default=0)),
                ('positive_sentiment_count', models.PositiveIntegerField(default=0)),
                ('negative_sentiment_count', models.PositiveIntegerField(default=0)),
                ('neutral_sentiment_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='communications.channel')),
                ('sequence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='communications.sequence')),
            ],
            options={
                'db_table': 'communications_analytics',
            },
        ),
        migrations.CreateModel(
            name='SequenceEnrollment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('failed', 'Failed'), ('opted_out', 'Opted Out')], default='active', max_length=20)),
                ('current_step', models.PositiveIntegerField(default=0)),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('next_action_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('personalization_data', models.JSONField(default=dict)),
                ('engagement_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Engagement score (0.00 to 1.00)', max_digits=3)),
                ('messages_sent', models.PositiveIntegerField(default=0)),
                ('messages_opened', models.PositiveIntegerField(default=0)),
                ('messages_clicked', models.PositiveIntegerField(default=0)),
                ('messages_replied', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sequence_enrollments', to='pipelines.record')),
                ('enrolled_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrolled_sequences', to=settings.AUTH_USER_MODEL)),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='communications.sequence')),
            ],
            options={
                'db_table': 'communications_sequence_enrollment',
            },
        ),
        migrations.AddIndex(
            model_name='channel',
            index=models.Index(fields=['channel_type'], name='communicati_channel_9f9932_idx'),
        ),
        migrations.AddIndex(
            model_name='channel',
            index=models.Index(fields=['auth_status'], name='communicati_auth_st_9799c8_idx'),
        ),
        migrations.AddIndex(
            model_name='channel',
            index=models.Index(fields=['is_active'], name='communicati_is_acti_43a875_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['primary_contact'], name='communicati_primary_67fc33_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['assigned_to'], name='communicati_assigne_578ec4_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['status'], name='communicati_status_3188d1_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['last_message_at'], name='communicati_last_me_5926ff_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['channel', 'external_thread_id'], name='communicati_channel_09c3f4_idx'),
        ),
        migrations.AddIndex(
            model_name='sequence',
            index=models.Index(fields=['sequence_type'], name='communicati_sequenc_fee735_idx'),
        ),
        migrations.AddIndex(
            model_name='sequence',
            index=models.Index(fields=['is_active'], name='communicati_is_acti_082e22_idx'),
        ),
        migrations.AddIndex(
            model_name='sequence',
            index=models.Index(fields=['is_template'], name='communicati_is_temp_118b8c_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation'], name='communicati_convers_f41ec9_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['external_message_id'], name='communicati_externa_7b3b80_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['direction'], name='communicati_directi_7fed12_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['status'], name='communicati_status_122378_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['created_at'], name='communicati_created_a4ebd4_idx'),
        ),
        migrations.AddIndex(
            model_name='communicationanalytics',
            index=models.Index(fields=['date'], name='communicati_date_630072_idx'),
        ),
        migrations.AddIndex(
            model_name='communicationanalytics',
            index=models.Index(fields=['channel', 'date'], name='communicati_channel_30c8da_idx'),
        ),
        migrations.AddIndex(
            model_name='communicationanalytics',
            index=models.Index(fields=['sequence', 'date'], name='communicati_sequenc_45c07a_idx'),
        ),
        migrations.AddConstraint(
            model_name='communicationanalytics',
            constraint=models.UniqueConstraint(condition=models.Q(('channel__isnull', False), ('sequence__isnull', True)), fields=('date', 'channel'), name='unique_daily_channel_analytics'),
        ),
        migrations.AddConstraint(
            model_name='communicationanalytics',
            constraint=models.UniqueConstraint(condition=models.Q(('channel__isnull', True), ('sequence__isnull', False)), fields=('date', 'sequence'), name='unique_daily_sequence_analytics'),
        ),
        migrations.AddIndex(
            model_name='sequenceenrollment',
            index=models.Index(fields=['contact_record'], name='communicati_contact_0f5067_idx'),
        ),
        migrations.AddIndex(
            model_name='sequenceenrollment',
            index=models.Index(fields=['status'], name='communicati_status_ca699e_idx'),
        ),
        migrations.AddIndex(
            model_name='sequenceenrollment',
            index=models.Index(condition=models.Q(('status', 'active')), fields=['next_action_at'], name='idx_active_next_action'),
        ),
        migrations.AddIndex(
            model_name='sequenceenrollment',
            index=models.Index(fields=['sequence', 'status'], name='communicati_sequenc_e10cec_idx'),
        ),
        migrations.AddConstraint(
            model_name='sequenceenrollment',
            constraint=models.UniqueConstraint(fields=('sequence', 'contact_record'), name='unique_sequence_contact_enrollment'),
        ),
    ]
